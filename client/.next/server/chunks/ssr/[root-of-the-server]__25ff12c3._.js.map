{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/alec/Documents/code/hudle/client/src/lib/validations.ts"],"sourcesContent":["import { z } from \"zod\";\n\n/////////////////////////////////////////// SIGN IN VALIDATION ////////////////////////////////////////////\nexport const loginSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n});\n\nexport type LoginFormData = z.infer<typeof loginSchema>;\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,cAAc,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,OAAO,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/alec/Documents/code/hudle/client/src/app/%28auth%29/components/ui/Input.tsx"],"sourcesContent":["import { InputHTMLAttributes, forwardRef } from \"react\";\n\ntype InputProps = InputHTMLAttributes<HTMLInputElement> & {\n  label: string;\n  error?: string;\n};\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(({ label, error, ...props }, ref) => (\n  <div className=\"mb-4 w-full\">\n    <label className=\"block text-sm font-medium text-gray-700 mb-1\">{label}</label>\n    <input\n      {...props}\n      ref={ref}\n      className={`w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary ${\n        error ? \"border-red-500\" : \"border-gray-300\"\n      }`}\n    />\n    {error && <p className=\"text-red-500 text-sm mt-1\">{error}</p>}\n  </div>\n));\n\nInput.displayName = \"Input\";\nexport default Input;\n"],"names":[],"mappings":";;;;AAAA;;;AAOA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAgC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBAClF,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;0BAAgD;;;;;;0BACjE,8OAAC;gBACE,GAAG,KAAK;gBACT,KAAK;gBACL,WAAW,CAAC,sFAAsF,EAChG,QAAQ,mBAAmB,mBAC3B;;;;;;YAEH,uBAAS,8OAAC;gBAAE,WAAU;0BAA6B;;;;;;;;;;;;AAIxD,MAAM,WAAW,GAAG;uCACL","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/alec/Documents/code/hudle/client/src/app/%28auth%29/components/ui/Button.tsx"],"sourcesContent":["type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  label: string;\n};\n\nconst Button = ({ label, ...props }: ButtonProps) => {\n  return (\n    <button\n      {...props}\n      className=\"w-full py-2 px-4 bg-primary text-white rounded-md hover:opacity-90 cursor-pointer transition\"\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"mappings":";;;;;AAIA,MAAM,SAAS,CAAC,EAAE,KAAK,EAAE,GAAG,OAAoB;IAC9C,qBACE,8OAAC;QACE,GAAG,KAAK;QACT,WAAU;kBAET;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/alec/Documents/code/hudle/client/src/app/%28auth%29/components/forms/LoginForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { loginSchema, LoginFormData } from \"@/lib/validations\";\nimport Input from \"../ui/Input\";\nimport Button from \"../ui/Button\";\n\nexport default function LoginForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n  });\n\n  const onSubmit = async (data: LoginFormData) => {\n    console.log(\"Logging in:\", data);\n    // API call or auth logic here\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 w-full\">\n      <Input label=\"Username or email address\" type=\"email\" {...register(\"email\")} error={errors.email?.message} />\n      <Input label=\"Password\" type=\"password\" {...register(\"password\")} error={errors.password?.message} />\n      <Button label={isSubmitting ? \"Logging in...\" : \"Login\"} disabled={isSubmitting} />\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,YAAY,EAAE,EACpC,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAiB;QACzB,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,yHAAA,CAAA,cAAW;IACnC;IAEA,MAAM,WAAW,OAAO;QACtB,QAAQ,GAAG,CAAC,eAAe;IAC3B,8BAA8B;IAChC;IAEA,qBACE,8OAAC;QAAK,UAAU,aAAa;QAAW,WAAU;;0BAChD,8OAAC,oJAAA,CAAA,UAAK;gBAAC,OAAM;gBAA4B,MAAK;gBAAS,GAAG,SAAS,QAAQ;gBAAE,OAAO,OAAO,KAAK,EAAE;;;;;;0BAClG,8OAAC,oJAAA,CAAA,UAAK;gBAAC,OAAM;gBAAW,MAAK;gBAAY,GAAG,SAAS,WAAW;gBAAE,OAAO,OAAO,QAAQ,EAAE;;;;;;0BAC1F,8OAAC,qJAAA,CAAA,UAAM;gBAAC,OAAO,eAAe,kBAAkB;gBAAS,UAAU;;;;;;;;;;;;AAGzE","debugId":null}}]
}